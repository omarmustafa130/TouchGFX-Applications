/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef LOCKSCREENVIEWBASE_HPP
#define LOCKSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/lockscreen_screen/lockscreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/SwipeContainer.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>

class lockscreenViewBase : public touchgfx::View<lockscreenPresenter>
{
public:
    lockscreenViewBase();
    virtual ~lockscreenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void OnButtonClicked_ent()
    {
        // Override and implement this function in lockscreen
    }

    virtual void OnButtonClicked_clr()
    {
        // Override and implement this function in lockscreen
    }

    virtual void OnButtonClicked_1()
    {
        // Override and implement this function in lockscreen
    }

    virtual void OnButtonClicked_2()
    {
        // Override and implement this function in lockscreen
    }

    virtual void OnButtonClicked_3()
    {
        // Override and implement this function in lockscreen
    }

    virtual void OnButtonClicked_4()
    {
        // Override and implement this function in lockscreen
    }

    virtual void OnButtonClicked_5()
    {
        // Override and implement this function in lockscreen
    }

    virtual void OnButtonClicked_6()
    {
        // Override and implement this function in lockscreen
    }

    virtual void OnButtonClicked_7()
    {
        // Override and implement this function in lockscreen
    }

    virtual void OnButtonClicked_8()
    {
        // Override and implement this function in lockscreen
    }

    virtual void OnButtonClicked_9()
    {
        // Override and implement this function in lockscreen
    }

    virtual void OnButtonClicked_0()
    {
        // Override and implement this function in lockscreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::SwipeContainer swipeContainer1;
    touchgfx::Container swipeContainer1Page2;
    touchgfx::Image Image1;
    touchgfx::ButtonWithLabel button_ent;
    touchgfx::ButtonWithLabel button_clr;
    touchgfx::ButtonWithLabel button_0;
    touchgfx::ButtonWithLabel button_9;
    touchgfx::ButtonWithLabel button_8;
    touchgfx::ButtonWithLabel button_7;
    touchgfx::ButtonWithLabel button_6;
    touchgfx::ButtonWithLabel button_5;
    touchgfx::ButtonWithLabel button_4;
    touchgfx::ButtonWithLabel button_3;
    touchgfx::ButtonWithLabel button_2;
    touchgfx::ButtonWithLabel button_1;
    touchgfx::TextAreaWithOneWildcard pinDisplayText;
    touchgfx::Container swipeContainer1Page1;
    touchgfx::Image image1;
    touchgfx::TextAreaWithOneWildcard textArea1;
    touchgfx::TextArea textArea2;
    touchgfx::ScalableImage scalableImage2;

    /*
     * Wildcard Buffers
     */
    static const uint16_t PINDISPLAYTEXT_SIZE = 200;
    touchgfx::Unicode::UnicodeChar pinDisplayTextBuffer[PINDISPLAYTEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<lockscreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // LOCKSCREENVIEWBASE_HPP
